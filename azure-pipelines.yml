# Schema docs at https://aka.ms/yaml
trigger:
  - master

jobs:
  - job: linux
    pool:
      vmImage: 'Ubuntu 16.04'
    strategy:
      matrix:
        check-whole-repo-tests:
          TASK: check-whole-repo-tests
        lint:
          TASK: lint
        lint-ruby:
          TASK: lint-ruby
        check-format:
          TASK: check-format
        check-rust-tests:
          TASK: check-rust-tests
        check-coverage:
          TASK: check-coverage
        check-pypy:
          TASK: check-pypy
        check-pypy35:
          TASK: check-pypy35
        check-pypy36:
          TASK: check-pypy36
        check-py36:
          TASK: check-py36
        check-py27:
          TASK: check-py27
        check-py35:
          TASK: check-py35
        check-py37:
          TASK: check-py37
        check-py38:
          TASK: check-py38
        check-quality:
          TASK: check-quality
        check-ruby-tests:
          TASK: check-ruby-tests
        check-unicode:
          TASK: check-unicode
        check-py27-typing:
          TASK: check-py27-typing
        check-nose:
          TASK: check-nose
        check-pytest43:
          TASK: check-pytest43
        check-django22:
          TASK: check-django22
        check-django21:
          TASK: check-django21
        check-django20:
          TASK: check-django20
        check-django111:
          TASK: check-django111
        check-pandas19:
          TASK: check-pandas19
        check-pandas22:
          TASK: check-pandas22
        check-pandas23:
          TASK: check-pandas23
        check-pandas24:
          TASK: check-pandas24
        check-pandas25:
          TASK: check-pandas25
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.6'
    - script: sudo apt-get update && sudo apt-get install libreadline-dev libsqlite3-dev shellcheck
      displayName: Install apt dependencies
    - script: ./build.sh check-installed
      displayName: Install Python
    - script: ./build.sh
      displayName: Run tests

  # prefix `a_` because jobs start running in roughly alphabetical order,
  # and starting these longer-running jobs early improves utilisation.
  - job: a_windows
    pool:
      vmImage: 'windows-2019'
    strategy:
      matrix:
        check-py36-x64:
          python.version: '3.6'
          python.architecture: 'x64'
        check-py36-x86:
          python.version: '3.6'
          python.architecture: 'x86'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: '$(python.architecture)'
    - script: |
        pip install --upgrade setuptools pip wheel
        pip install setuptools -r requirements/test.txt
        pip install hypothesis-python/[all]
      displayName: Install dependencies
    - script: |
        cd hypothesis-python
        pytest
      displayName: Run tests

  - job: windows_py2
    pool:
      vmImage: 'windows-2019'
    strategy:
      matrix:
        check-py27-x64:
          python.version: '2.7'
          python.architecture: 'x64'
        check-py27-x86:
          python.version: '2.7'
          python.architecture: 'x86'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: '$(python.architecture)'
    - script: |
        pip install --upgrade setuptools pip wheel
        pip install setuptools -r requirements/py2.txt
        pip install hypothesis-python/[all]
      displayName: Install dependencies
    - script: |
        cd hypothesis-python
        pytest
      displayName: Run tests

  - job: osx
    pool:
      vmImage: 'macOS-10.13'
    strategy:
      matrix:
        check-py27:
          TASK: check-py27
        check-py36:
          TASK: check-py36
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.6'
    - script: |
        brew update
        brew install readline xz ncurses
        ./build.sh install-core
      displayName: Install dependencies
    - script: ./build.sh
      displayName: Run tests

# TODO: Deploy jobs dependent on above
